#! /bin/bash

commitMsgPath=$1

declare -a commitMsg
errorSum=0
declare -a errors

allowedTypes=("fix" "feat" "build" "chore" "ci" "docs" "style" "refactor" "perf" "test")

lineCounter=1
descriptionMatch=1
msgSize=0
totalBlankLines=0
while read line
do
	# ignore commented lines
	if [[ ! ${line} =~ ^[[:blank:]]*\#.* ]]; then
		msgSize=$((${msgSize} + 1))
		commitMsg[${lineCounter}]=${line}
			
			# validate description
			if [ ${lineCounter} == 1 ]; then
				for type in "${allowedTypes[@]}"
				do
					if [[ ${line} =~ ^${type}('('.*')')?'!'?:[[:blank:]].+ ]]; then
						descriptionMatch=0
						break
					fi
				done

			# check for blank line after description
			elif [ ${lineCounter} == 2 ]; then
				if [[ ! ${line} =~ ^$ ]]; then
					errorSum=$((${errorSum} + 1))
					errors+=("There must be a blank line following the description")
				else
					totalBlankLines=$((${totalBlankLines} + 1))
				fi

			# check for succeeding blank lines
			elif [ ${lineCounter} -gt 2 ] && [[ ${line} =~ ^$ ]]; then
				totalBlankLines=$((${totalBlankLines} + 1))
				if [[ ${commitMsg[$((${lineCounter} - 1))]} =~ ^$ ]]; then
					errorSum=$((${errorSum} + 1))
					errors+=("There can not be more than one succeeding blank line")
				fi
			fi
		lineCounter=$((${lineCounter} + 1))
	fi
done < ${commitMsgPath}

# verify description
if [ ! ${descriptionMatch} == 0 ]; then
	errorSum=$((${errorSum} + 1))
	errors+=("Incorrect description")
fi

# validate total number of lines
if [ ${lineCounter} == 3 ]; then
	errorSum=$((${errorSum} + 1))
	errors+=("Incorrect number of lines, message should have a length of 1 or 3+ lines")
fi

# check, if last line is blank
if [[ ${commitMsg[$msgSize]} =~ ^$ ]]; then
	errorSum=$((${errorSum} + 1))
	errors+=("The last line can not be blank")
fi

# validate total number of blank lines
if [ ${totalBlankLines} -gt 3 ]; then
	errorSum=$((${errorSum} + 1))
	errors+=("Too many blank lines, the commit message can have a maximum of 3 blank lines")
fi

# show errors
if [ ! ${errorSum} == 0 ]; then
	colorRED='\033[31m'
	colorSTOP='\033[0m'
	
	echo -ne "${colorRED}Commit message declined!${colorSTOP}"
	echo ""
	echo "Your commit message does not comply to the Conventional Commits specification:"
	echo ""
	echo "<type>(optional scope)(optional !): <description>"
	echo ""
	echo "[optional body]"
	echo ""
	echo "[optional footers]"
	echo ""
	# list description types
	echo "Valid description types:"
	echo "${allowedTypes[@]}"
	echo ""
	echo "Your commit message:"
	echo ""
	lineCounter=0
	for line in "${commitMsg[@]}"
	do
		lineCounter=$((${lineCounter} + 1))
		echo "Line "${lineCounter}": "${line}
	done
	echo ""
	echo "The following errors occured:"
	echo ""
	
	for error in "${errors[@]}"
	do
		echo -ne "${colorRED}${error}${colorSTOP}"
		echo ""
	done
	# abort commit
	exit 1
else
	# accept commit
	exit 0
fi
